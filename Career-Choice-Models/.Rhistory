.cols = all_of(
list_factors %>%
flatten() %>%
flatten_chr()
)
, .fns = function(x){x/100}
)
) -> df_occupations
# DATA (SIMULATED) ------------------------------------------------------------
# All items
df_input.all <- fun_simulate.tmvnorm(
.df_data.numeric = df_occupations
,.int_n.simulations = 50
,.chr_observations.name = 'Name'
,.dbl_lower.bound = 0
,.dbl_upper.bound = 1
)
# For this example, use Martijn' questionnaire
chr_names <- df_input.all$Name
names(chr_names) <- df_input.all$Name
df_input.all
df_occupations
# NO IMPUTATION ------------------------------------
lapply(
chr_names
, function(name){
df_input.all %>%
filter(Name == name) -> df_input
# NO IMPUTATION --------------------------------------------
fun_KNN.matching(
.df_data.numeric = df_occupations
, .vec_query.numeric = df_input
, .int_k = nrow(df_occupations)
, .imput.over_qualification = F
, .dbl_decimals = 4
) %>%
return(.)
}) -> list_KNN.output
# OVERQUALIFICATION IMPUTATION --------------------------------------------
# OVERQUALIFICATION IMPUTATION - 100% UNNECESSARY COMPETENCY (0)
# OVERQUALIFICATION IMPUTATION - 5-POINT LIKERT LOW / 4 (0.0625)
# OVERQUALIFICATION IMPUTATION - 5-POINT LIKERT LOW / 2 (0.125)
# OVERQUALIFICATION IMPUTATION - 5-POINT LIKERT LOW (0.25)
# OVERQUALIFICATION IMPUTATION - 10-POINT LIKERT VERY LOW / 2 (0.05)
# OVERQUALIFICATION IMPUTATION - 10-POINT LIKERT VERY LOW (0.10)
# OVERQUALIFICATION IMPUTATION - 10-POINT LIKERT LOW (0.20)
dbl_threshold <- 0
lapply(
chr_names
, function(name){
df_input.all %>%
filter(Name == name) -> df_input
fun_KNN.matching(
.df_data.numeric = df_occupations
, .vec_query.numeric = df_input
, .int_k = nrow(df_occupations)
, .imput.over_qualification = T
, .dbl_over_qualification.threshold = dbl_threshold
, .dbl_decimals = 4
) %>%
return(.)
}) -> list_KNN.output.sub
# HISTOGRAMS (NO IMPUTATION) --------------------------------------------------------
df_KNN.output.long %>%
mutate(
Similarity2 = Similarity
, Similarity2 = fct_reorder(
Similarity2, Value
, .fun = max, .desc = T
)
, Similarity = fct_reorder(
Similarity, Value
, .fun = max, .desc = T
)
) -> tmp
tmp %>%
ggplot(aes(
x = Value
)) +
geom_histogram(
data = tmp %>%
select(-Similarity)
, aes(group = Similarity2)
, binwidth = .1
, fill = 'grey'
, alpha = 0.5
) +
geom_histogram(
aes(fill = Similarity)
, binwidth = .1
, fill = '#fb5607'
) +
geom_vline(
xintercept = 0
, linetype = 'dashed'
) +
geom_vline(
xintercept = 0.5
, linetype = 'dashed'
) +
facet_wrap(
facets = vars(Similarity)
, nrow = 3) +
labs(
x = 'Similarity (%)'
, y = 'Count'
, title = 'Similarity Metrics Comparison (Simulated) - No Imputation'
) +
scale_x_continuous(limits = c(-1,1)) +
ggthemes::theme_hc() -> plt_hist
# HISTOGRAMS (WITH IMPUTATION) --------------------------------------------------------
df_KNN.output.sub.long %>%
mutate(
Similarity2 = Similarity
, Similarity2 = fct_reorder(
Similarity2, Value
, .fun = max, .desc = T
)
, Similarity = fct_reorder(
Similarity, Value
, .fun = max, .desc = T
)
) -> tmp
tmp %>%
ggplot(aes(
x = Value
)) +
geom_histogram(
data = tmp %>%
select(-Similarity)
, aes(group = Similarity2)
, binwidth = .1
, fill = 'grey'
, alpha = 0.5
) +
geom_histogram(
aes(fill = Similarity)
, binwidth = .1
, fill = viridis::plasma(1)
) +
geom_vline(
xintercept = 0
, linetype = 'dashed'
) +
geom_vline(
xintercept = 0.5
, linetype = 'dashed'
) +
facet_wrap(
facets = vars(Similarity)
, nrow = 3) +
labs(
x = 'Similarity (%)'
, y = 'Count'
, title = glue('Similarity Metrics Comparison (Simulated) - With Overqualification Imputation (at {dbl_threshold})')
) +
scale_x_continuous(limits = c(-1,1)) +
ggthemes::theme_hc() -> plt_hist.sub
# BIND DATA FRAMES --------------------------------------------------------
list_KNN.output %>%
bind_rows(.id = 'Name') %>%
select(
Name
, Occupation
, starts_with('Similarity.')
, Euclidean_Distance
) %>%
arrange(Euclidean_Distance) -> df_KNN.output
list_KNN.output.sub %>%
bind_rows(.id = 'Name') %>%
select(
Name
, Occupation
, starts_with('Similarity.')
, Euclidean_Distance
) %>%
arrange(Euclidean_Distance) -> df_KNN.output.sub
# LONG DATA FRAMES --------------------------------------------------------
df_KNN.output %>%
pivot_longer(
cols = starts_with('Similarity.')
, names_to = 'Similarity'
, values_to = 'Value'
) %>%
group_by(Similarity) %>%
arrange(Value, Euclidean_Distance) %>%
mutate(
ID = row_number()
, ID = factor(ID)
) %>%
ungroup() -> df_KNN.output.long
df_KNN.output.sub %>%
pivot_longer(
cols = starts_with('Similarity.')
, names_to = 'Similarity'
, values_to = 'Value'
) %>%
group_by(Similarity) %>%
arrange(Value, Euclidean_Distance) %>%
mutate(
ID = row_number()
, ID = factor(ID)
) %>%
ungroup() -> df_KNN.output.sub.long
# HISTOGRAMS (NO IMPUTATION) --------------------------------------------------------
df_KNN.output.long %>%
mutate(
Similarity2 = Similarity
, Similarity2 = fct_reorder(
Similarity2, Value
, .fun = max, .desc = T
)
, Similarity = fct_reorder(
Similarity, Value
, .fun = max, .desc = T
)
) -> tmp
tmp %>%
ggplot(aes(
x = Value
)) +
geom_histogram(
data = tmp %>%
select(-Similarity)
, aes(group = Similarity2)
, binwidth = .1
, fill = 'grey'
, alpha = 0.5
) +
geom_histogram(
aes(fill = Similarity)
, binwidth = .1
, fill = '#fb5607'
) +
geom_vline(
xintercept = 0
, linetype = 'dashed'
) +
geom_vline(
xintercept = 0.5
, linetype = 'dashed'
) +
facet_wrap(
facets = vars(Similarity)
, nrow = 3) +
labs(
x = 'Similarity (%)'
, y = 'Count'
, title = 'Similarity Metrics Comparison (Simulated) - No Imputation'
) +
scale_x_continuous(limits = c(-1,1)) +
ggthemes::theme_hc() -> plt_hist
# HISTOGRAMS (WITH IMPUTATION) --------------------------------------------------------
df_KNN.output.sub.long %>%
mutate(
Similarity2 = Similarity
, Similarity2 = fct_reorder(
Similarity2, Value
, .fun = max, .desc = T
)
, Similarity = fct_reorder(
Similarity, Value
, .fun = max, .desc = T
)
) -> tmp
tmp %>%
ggplot(aes(
x = Value
)) +
geom_histogram(
data = tmp %>%
select(-Similarity)
, aes(group = Similarity2)
, binwidth = .1
, fill = 'grey'
, alpha = 0.5
) +
geom_histogram(
aes(fill = Similarity)
, binwidth = .1
, fill = viridis::plasma(1)
) +
geom_vline(
xintercept = 0
, linetype = 'dashed'
) +
geom_vline(
xintercept = 0.5
, linetype = 'dashed'
) +
facet_wrap(
facets = vars(Similarity)
, nrow = 3) +
labs(
x = 'Similarity (%)'
, y = 'Count'
, title = glue('Similarity Metrics Comparison (Simulated) - With Overqualification Imputation (at {dbl_threshold})')
) +
scale_x_continuous(limits = c(-1,1)) +
ggthemes::theme_hc() -> plt_hist.sub
ggsave(
plot = plt_hist
, filename = '1.Similarities_Comparison_Hist1_Simulated.png'
, width = 16
, height = 8
)
ggsave(
plot = plt_hist.sub
, filename = '2.Similarities_Comparison_Hist2_Simulated.png'
, width = 16
, height = 8
)
# HEATMAPS (NO IMPUTATION) ------------------------------------------------
df_KNN.output.long %>%
mutate(
Similarity = fct_reorder(
.f = Similarity
, .x = Value
, .fun = sum
, .desc = F
)
) %>%
ggplot(aes(
x = ID
, y = Similarity
, fill = Value
)) +
geom_tile() +
ggthemes::scale_fill_gradient2_tableau(
palette = 'Red-Blue-White Diverging'
, limits = c(-1,1)
) +
labs(
x = 'Similarity Ranking'
, y = 'Similarity Metric'
, fill = 'Similarity (%)'
, title = 'Similarity Metrics Comparison (Simulated) - No Imputation'
) +
ggthemes::theme_hc() +
theme(
axis.text.x = element_blank()
, axis.ticks.x = element_blank()
) -> plt_heatmap
# HEATMAPS (WITH IMPUTATION) ------------------------------------------------
df_KNN.output.sub.long %>%
mutate(
Similarity = fct_reorder(
.f = Similarity
, .x = Value
, .fun = sum
, .desc = F
)
) %>%
ggplot(aes(
x = ID
, y = Similarity
, fill = Value
)) +
geom_tile() +
ggthemes::scale_fill_gradient2_tableau(
palette = 'Red-Blue-White Diverging'
, limits = c(-1,1)
) +
labs(
x = 'Similarity Ranking'
, y = 'Similarity Metric'
, fill = 'Similarity (%)'
, title = glue('Similarity Metrics Comparison (Simulated) - With Overqualification Imputation (at {dbl_threshold})')
) +
ggthemes::theme_hc() +
theme(
axis.text.x = element_blank()
, axis.ticks.x = element_blank()
) -> plt_heatmap.sub
# HEATMAPS (SIDE BY SIDE) -----------------------------------------------
plt_heatmaps <- plt_heatmap + plt_heatmap.sub
# LINE CHARTS (NO IMPUTATION) --------------------------------------------------------
df_KNN.output.long %>%
mutate(
Similarity2 = Similarity
, Similarity2 = fct_reorder(
Similarity2, Value
, .fun = max, .desc = T
)
, Similarity = fct_reorder(
Similarity, Value
, .fun = max, .desc = T
)
) -> tmp
tmp %>%
ggplot(aes(
x = ID
, y = Value
, group = 1
)) +
geom_line(
data = tmp %>%
select(-Similarity)
, aes(group = Similarity2)
, color = 'grey'
, alpha = 0.5
) +
geom_hline(
yintercept = 0
, color = '#001219'
) +
geom_line(
aes(color = Similarity)
, color = '#fb5607'
, size = 1.22
) +
facet_wrap(
facets = vars(Similarity)
, nrow = 3) +
labs(
x = 'Similarity Ranking'
, y = 'Similarity (%)'
, title = 'Similarity Metrics Comparison (Simulated) - No Imputation'
) +
scale_y_continuous(limits = c(-1,1)) +
ggthemes::theme_hc() +
theme(
axis.text.x = element_blank()
, axis.ticks.x = element_blank()
) -> plt_line
# LINE CHARTS (WITH IMPUTATION) --------------------------------------------------------
df_KNN.output.sub.long %>%
mutate(
Similarity2 = Similarity
, Similarity2 = fct_reorder(
Similarity2, Value
, .fun = max, .desc = T
)
, Similarity = fct_reorder(
Similarity, Value
, .fun = max, .desc = T
)
) -> tmp
tmp %>%
ggplot(aes(
x = ID
, y = Value
, group = 1
)) +
geom_line(
data = tmp %>%
select(-Similarity)
, aes(group = Similarity2)
, color = 'grey'
, alpha = 0.5
) +
geom_hline(
yintercept = 0
, color = '#001219'
) +
geom_line(
aes(color = Similarity)
, color = viridis::plasma(1)
, size = 1.22
) +
facet_wrap(
facets = vars(Similarity)
, nrow = 3) +
labs(
x = 'Similarity Ranking'
, y = 'Similarity (%)'
, title = glue('Similarity Metrics Comparison (Simulated) - With Overqualification Imputation (at {dbl_threshold})')
) +
scale_y_continuous(limits = c(-1,1)) +
ggthemes::theme_hc() +
theme(
axis.text.x = element_blank()
, axis.ticks.x = element_blank()
) -> plt_line.sub
# LINE CHARTS (SIDE BY SIDE) -----------------------------------------------
plt_lines <- plt_line + plt_line.sub
ggsave(
plot = plt_heatmap
, filename = '3.Similarities_Comparison_Heatmap1_Simulated.png'
, width = 16
, height = 8
)
ggsave(
plot = plt_heatmap.sub
, filename = '4.Similarities_Comparison_Heatmap2_Simulated.png'
, width = 16
, height = 8
)
ggsave(
plot = plt_heatmaps
, filename = '5.Similarities_Comparison_Heatmap3_Simulated.png'
, width = 16
, height = 8
)
ggsave(
plot = plt_line
, filename = '6.Similarities_Comparison_Lines1_Simulated.png'
, width = 16
, height = 8
)
ggsave(
plot = plt_line.sub
, filename = '7.Similarities_Comparison_Lines2_Simulated.png'
, width = 16
, height = 8
)
ggsave(
plot = plt_lines
, filename = '8.Similarities_Comparison_Lines3_Simulated.png'
, width = 16
, height = 8
)
