.cols = where(is.numeric)
, .fns = function(x){round(x, 4)}
)
, .after = estimate
) %>% view
8760 * (8 / 24)
365 * 8
# List of test data
list(
'efa.comp' = df_occupations.efa.comp
) -> list_df_occupations
# --- HUMAN CAPITAL COST ESTIMATION ---------------------------------------------
# DATA WRANGLING ----------------------------------------------------------
list_df_occupations %>%
lapply(
function(df){
df %>%
mutate(
across(
.cols = ends_with('.l')
,.fns = function(x){100*x}
)
, sample_weight = sum(employment2) / employment2
, education.years = recode(
entry_level_education
, "Bachelor's degree" = 17 + 4
, "Postsecondary nondegree award" = 17 + 4 + 2
, "High school diploma or equivalent" = 17
, "Master's degree" = 17 + 5
, "Associate's degree" = 17 + 2
, "No formal educational credential" = 14
, "Some college, no degree" = 17 + 2
, "Doctoral or professional degree" = 17 + 7
)
, education.years = education.years * (8 / 24)
# , education.years = education.years * (24 / 8)
# , education.years = education.years - min(education.years)
# , education.years = (education.years - min(education.years)) * (24 / 8)
# , education.hours = education.years * 8760
# , education.hours = education.years * 8760 * (8 / 24)
# , education.hours = education.years * 8760 * (24 / 8)
) %>%
return()
}
) -> list_df_occupations
# NNLS REGRESSION ---------------------------------------------------
Map(
function(
chr_dummies
, df_data
, dbl_lb
, lgc_intercept
){
df_data %>%
fun_lm(
# .sym_vars.dependent = 'education.hours'
.sym_vars.dependent = 'education.years'
, .sym_vars.independent =
df_data %>%
select(
ends_with('.l')
) %>%
names()
, .sym_vars.dummies = chr_dummies
, .sym_vars.weights = 'sample_weight'
, .dbl_lower.bounds = dbl_lb
, .lgc_intercept = lgc_intercept
, .lgc_dummy.remove = F
) %>%
return()
}
, chr_dummies = list('efa.comp' = character())
# , chr_dummies = list('efa.comp' = 'typical_on_the_job_training')
, dbl_lb = 0
# , dbl_lb = 15
# , dbl_lb = 1
, lgc_intercept = F
, df_data = list_df_occupations
) -> list_models
# REGRESSION STATISTICS COMPARISON ---------------------------------------------------
# R2
list_models$efa.comp$r2
# RMSE
list_models$efa.comp$rmse
# MAE
list_models$efa.comp$mae
# Fitted mean
list_models$efa.comp$fitted.mean
# Fitted standard deviation
list_models$efa.comp$fitted.sd
# Parameters
list_models$efa.comp$model.tidy %>%
mutate(
estimate.years = estimate
, low.years = 17 * estimate.years
, medium.years = 50 * estimate.years
, high.years = 83 * estimate.years
, across(
.cols = where(is.numeric)
, .fns = function(x){round(x, 4)}
)
, .after = estimate
) %>% view
# --- HUMAN CAPITAL COST ESTIMATION ---------------------------------------------
# DATA WRANGLING ----------------------------------------------------------
list_df_occupations %>%
lapply(
function(df){
df %>%
mutate(
across(
.cols = ends_with('.l')
,.fns = function(x){100*x}
)
, sample_weight = sum(employment2) / employment2
, education.years = recode(
entry_level_education
, "Bachelor's degree" = 17 + 4
, "Postsecondary nondegree award" = 17 + 4 + 2
, "High school diploma or equivalent" = 17
, "Master's degree" = 17 + 5
, "Associate's degree" = 17 + 2
, "No formal educational credential" = 14
, "Some college, no degree" = 17 + 2
, "Doctoral or professional degree" = 17 + 7
)
# , education.years = education.years * (8 / 24)
# , education.years = education.years * (24 / 8)
# , education.years = education.years - min(education.years)
# , education.years = (education.years - min(education.years)) * (24 / 8)
# , education.hours = education.years * 8760
# , education.hours = education.years * 8760 * (8 / 24)
# , education.hours = education.years * 8760 * (24 / 8)
) %>%
return()
}
) -> list_df_occupations
# NNLS REGRESSION ---------------------------------------------------
Map(
function(
chr_dummies
, df_data
, dbl_lb
, lgc_intercept
){
df_data %>%
fun_lm(
# .sym_vars.dependent = 'education.hours'
.sym_vars.dependent = 'education.years'
, .sym_vars.independent =
df_data %>%
select(
ends_with('.l')
) %>%
names()
, .sym_vars.dummies = chr_dummies
, .sym_vars.weights = 'sample_weight'
, .dbl_lower.bounds = dbl_lb
, .lgc_intercept = lgc_intercept
, .lgc_dummy.remove = F
) %>%
return()
}
, chr_dummies = list('efa.comp' = character())
# , chr_dummies = list('efa.comp' = 'typical_on_the_job_training')
, dbl_lb = 0
# , dbl_lb = 15
# , dbl_lb = 1
, lgc_intercept = F
, df_data = list_df_occupations
) -> list_models
# REGRESSION STATISTICS COMPARISON ---------------------------------------------------
# R2
list_models$efa.comp$r2
# RMSE
list_models$efa.comp$rmse
# MAE
list_models$efa.comp$mae
# Fitted mean
list_models$efa.comp$fitted.mean
# Fitted standard deviation
list_models$efa.comp$fitted.sd
# Parameters
list_models$efa.comp$model.tidy %>%
mutate(
estimate.years = estimate
, low.years = 17 * estimate.years
, medium.years = 50 * estimate.years
, high.years = 83 * estimate.years
, across(
.cols = where(is.numeric)
, .fns = function(x){round(x, 4)}
)
, .after = estimate
) %>% view
# List of test data
list(
'efa.comp' = df_occupations.efa.comp
) -> list_df_occupations
# --- HUMAN CAPITAL COST ESTIMATION ---------------------------------------------
# DATA WRANGLING ----------------------------------------------------------
list_df_occupations %>%
lapply(
function(df){
df %>%
mutate(
across(
.cols = ends_with('.l')
,.fns = function(x){100*x}
)
, sample_weight = sum(employment2) / employment2
, education.years = recode(
entry_level_education
, "Bachelor's degree" = 17 + 4
, "Postsecondary nondegree award" = 17 + 4 + 2
, "High school diploma or equivalent" = 17
, "Master's degree" = 17 + 5
, "Associate's degree" = 17 + 2
, "No formal educational credential" = 14
, "Some college, no degree" = 17 + 2
, "Doctoral or professional degree" = 17 + 7
)
# , education.years = education.years * (8 / 24)
# , education.years = education.years * (24 / 8)
# , education.years = education.years - min(education.years)
# , education.years = (education.years - min(education.years)) * (24 / 8)
# , education.hours = education.years * 8760
# , education.hours = education.years * 8760 * (8 / 24)
# , education.hours = education.years * 8760 * (24 / 8)
) %>%
return()
}
) -> list_df_occupations
# NNLS REGRESSION ---------------------------------------------------
Map(
function(
chr_dummies
, df_data
, dbl_lb
, lgc_intercept
){
df_data %>%
fun_lm(
# .sym_vars.dependent = 'education.hours'
.sym_vars.dependent = 'education.years'
, .sym_vars.independent =
df_data %>%
select(
ends_with('.l')
) %>%
names()
, .sym_vars.dummies = chr_dummies
, .sym_vars.weights = 'sample_weight'
, .dbl_lower.bounds = dbl_lb
, .lgc_intercept = lgc_intercept
, .lgc_dummy.remove = F
) %>%
return()
}
, chr_dummies = list('efa.comp' = character())
# , chr_dummies = list('efa.comp' = 'typical_on_the_job_training')
, dbl_lb = 0
# , dbl_lb = 15
# , dbl_lb = 1
, lgc_intercept = F
, df_data = list_df_occupations
) -> list_models
# REGRESSION STATISTICS COMPARISON ---------------------------------------------------
# R2
list_models$efa.comp$r2
# RMSE
list_models$efa.comp$rmse
# MAE
list_models$efa.comp$mae
# Fitted mean
list_models$efa.comp$fitted.mean
# Fitted standard deviation
list_models$efa.comp$fitted.sd
# Parameters
list_models$efa.comp$model.tidy %>%
mutate(
estimate.years = estimate
, low.years = 17 * estimate.years
, medium.years = 50 * estimate.years
, high.years = 83 * estimate.years
, across(
.cols = where(is.numeric)
, .fns = function(x){round(x, 4)}
)
, .after = estimate
) %>% view
# List of test data
list(
'efa.comp' = df_occupations.efa.comp
) -> list_df_occupations
# --- HUMAN CAPITAL COST ESTIMATION ---------------------------------------------
# DATA WRANGLING ----------------------------------------------------------
list_df_occupations %>%
lapply(
function(df){
df %>%
mutate(
across(
.cols = ends_with('.l')
,.fns = function(x){100*x}
)
, sample_weight = sum(employment2) / employment2
, education.years = recode(
entry_level_education
, "Bachelor's degree" = 17 + 4
, "Postsecondary nondegree award" = 17 + 4 + 2
, "High school diploma or equivalent" = 17
, "Master's degree" = 17 + 5
, "Associate's degree" = 17 + 2
, "No formal educational credential" = 14
, "Some college, no degree" = 17 + 2
, "Doctoral or professional degree" = 17 + 7
)
# , education.years = education.years * (8 / 24)
# , education.years = education.years * (24 / 8)
# , education.years = education.years - min(education.years)
# , education.years = (education.years - min(education.years)) * (24 / 8)
# , education.hours = education.years * 8760
# , education.hours = education.years * 8760 * (8 / 24)
# , education.hours = education.years * 8760 * (24 / 8)
) %>%
return()
}
) -> list_df_occupations
# NNLS REGRESSION ---------------------------------------------------
Map(
function(
chr_dummies
, df_data
, dbl_lb
, lgc_intercept
){
df_data %>%
fun_lm(
# .sym_vars.dependent = 'education.hours'
.sym_vars.dependent = 'education.years'
, .sym_vars.independent =
df_data %>%
select(
ends_with('.l')
) %>%
names()
, .sym_vars.dummies = chr_dummies
, .sym_vars.weights = 'sample_weight'
, .dbl_lower.bounds = dbl_lb
, .lgc_intercept = lgc_intercept
, .lgc_dummy.remove = F
) %>%
return()
}
, chr_dummies = list('efa.comp' = character())
# , chr_dummies = list('efa.comp' = 'typical_on_the_job_training')
# , dbl_lb = 0
# , dbl_lb = 15
, dbl_lb = 1 / 8760
, lgc_intercept = F
, df_data = list_df_occupations
) -> list_models
# REGRESSION STATISTICS COMPARISON ---------------------------------------------------
# R2
list_models$efa.comp$r2
# RMSE
list_models$efa.comp$rmse
# MAE
list_models$efa.comp$mae
# Fitted mean
list_models$efa.comp$fitted.mean
# Fitted standard deviation
list_models$efa.comp$fitted.sd
# Parameters
list_models$efa.comp$model.tidy %>%
mutate(
estimate.years = estimate
, low.years = 17 * estimate.years
, medium.years = 50 * estimate.years
, high.years = 83 * estimate.years
, across(
.cols = where(is.numeric)
, .fns = function(x){round(x, 4)}
)
, .after = estimate
) %>% view
1/8720
# List of test data
list(
'efa.comp' = df_occupations.efa.comp
) -> list_df_occupations
# --- HUMAN CAPITAL COST ESTIMATION ---------------------------------------------
# DATA WRANGLING ----------------------------------------------------------
list_df_occupations %>%
lapply(
function(df){
df %>%
mutate(
across(
.cols = ends_with('.l')
,.fns = function(x){100*x}
)
, sample_weight = sum(employment2) / employment2
, education.years = recode(
entry_level_education
, "Bachelor's degree" = 17 + 4
, "Postsecondary nondegree award" = 17 + 4 + 2
, "High school diploma or equivalent" = 17
, "Master's degree" = 17 + 5
, "Associate's degree" = 17 + 2
, "No formal educational credential" = 14
, "Some college, no degree" = 17 + 2
, "Doctoral or professional degree" = 17 + 7
)
, education.years = education.years - 12
# , education.years = education.years * (8 / 24)
# , education.years = education.years * (24 / 8)
# , education.years = education.years - min(education.years)
# , education.years = (education.years - min(education.years)) * (24 / 8)
# , education.hours = education.years * 8760
# , education.hours = education.years * 8760 * (8 / 24)
# , education.hours = education.years * 8760 * (24 / 8)
) %>%
return()
}
) -> list_df_occupations
# NNLS REGRESSION ---------------------------------------------------
Map(
function(
chr_dummies
, df_data
, dbl_lb
, lgc_intercept
){
df_data %>%
fun_lm(
# .sym_vars.dependent = 'education.hours'
.sym_vars.dependent = 'education.years'
, .sym_vars.independent =
df_data %>%
select(
ends_with('.l')
) %>%
names()
, .sym_vars.dummies = chr_dummies
, .sym_vars.weights = 'sample_weight'
, .dbl_lower.bounds = dbl_lb
, .lgc_intercept = lgc_intercept
, .lgc_dummy.remove = F
) %>%
return()
}
, chr_dummies = list('efa.comp' = character())
# , chr_dummies = list('efa.comp' = 'typical_on_the_job_training')
# , dbl_lb = 0
# , dbl_lb = 15
, dbl_lb = 1 / 8760
, lgc_intercept = F
, df_data = list_df_occupations
) -> list_models
# REGRESSION STATISTICS COMPARISON ---------------------------------------------------
# R2
list_models$efa.comp$r2
# RMSE
list_models$efa.comp$rmse
# MAE
list_models$efa.comp$mae
# Fitted mean
list_models$efa.comp$fitted.mean
# Fitted standard deviation
list_models$efa.comp$fitted.sd
# Parameters
list_models$efa.comp$model.tidy %>%
mutate(
estimate.years = estimate
, low.years = 17 * estimate.years
, medium.years = 50 * estimate.years
, high.years = 83 * estimate.years
, across(
.cols = where(is.numeric)
, .fns = function(x){round(x, 4)}
)
, .after = estimate
) %>% view
# Parameters
list_models$efa.comp$model.tidy %>%
mutate(
# estimate.years = estimate
age = estimate + 12
, low.years = 17 * age
, medium.years = 50 * age
, high.years = 83 * age
, across(
.cols = where(is.numeric)
, .fns = function(x){round(x, 4)}
)
, .after = estimate
) %>% view
# Parameters
list_models$efa.comp$model.tidy %>%
mutate(
estimate.years = estimate
, low.years = 17 * estimate.years + 12
, medium.years = 50 * estimate.years + 12
, high.years = 83 * estimate.years + 12
, across(
.cols = where(is.numeric)
, .fns = function(x){round(x, 4)}
)
, .after = estimate
) %>% view
