mtx_data_rows
)
) -> df_kflex_micro
# Calculate capital micro-flexibility
# Default value
df_kflex_micro_intra_factor <- NULL
df_kflex_micro_inter_factor <- NULL
# Intra-Factor Micro-Flexibility
if(length(efa_model)){
df_kflex_micro %>%
full_join(
df_loadings
) %>%
split(.$factor) %>%
map(
~ .x[,.x$item] %>%
rowMeans(
na.rm = T
) %>%
set_names(
.x$item
) %>%
as_tibble(
rownames = 'item'
)
) %>%
bind_rows(
.id = 'factor'
) %>%
rename(
'kflex_micro_intra_factor' = 3
) -> df_kflex_micro_intra_factor
}
# Inter-Factor Micro-Flexibility
if(length(efa_model)){
df_kflex_micro %>%
full_join(
df_loadings
) %>%
split(.$factor) %>%
map(
~ .x[
, !(colnames(.x) %in%
c(
.x$item
, 'item'
, 'factor'
)
)] %>%
rowMeans(
na.rm = T
) %>%
set_names(
.x$item
) %>%
as_tibble(
rownames = 'item'
)
) %>%
bind_rows(
.id = 'factor'
) %>%
rename(
'kflex_micro_inter_factor' = 3
) -> df_kflex_micro_inter_factor
}
# Overall Micro-Flexibility
rowMeans(
df_kflex_micro[-1]
, na.rm = T
) %>%
set_names(
df_kflex_micro[[1]]
) %>%
as_tibble(
rownames = 'item'
) %>%
rename(
'kflex_micro' = 2
) -> df_kflex_micro
# Output
return(compact(list(
'intra_factor_micro_kflex' = df_kflex_micro_intra_factor,
'inter_factor_micro_kflex' = df_kflex_micro_inter_factor,
'overall_micro_kflex' = df_kflex_micro
)))
}
# dsds --------------------------------------------------------------------
fun_kflex_micro(
df_data_rows = df_occupations
, efa_model = efa_model
, dbl_scale_ub = 100
, dbl_scale_lb = 0
, dbl_weights =
df_occupations$
employment2
) -> list_kflex_micro
# dsds --------------------------------------------------------------------
read_rds(
"C:/Users/Cao/Documents/Github/atlas-research/data/efa_model_equamax_15_factors.rds"
) -> efa_model
efa_model
df_occupations
fun_kflex_micro(
df_data_rows = df_occupations
, efa_model = efa_model
, dbl_scale_ub = 100
, dbl_scale_lb = 0
, dbl_weights =
df_occupations$
employment2
) -> list_kflex_micro
list_kflex_micro
list_kflex_micro
list_kflex_micro
list_kflex_micro
coef(bvls(
df_occupations %>%
select(ends_with('.l')) %>%
as.matrix() *
sqrt(
df_occupations$
employment2
)
, df_occupations$
annual_wage_2021 *
sqrt(
df_occupations$
employment2
)
, bl = rep(0,200)
, bu = rep(Inf,200)
)) %>%
set_names(
df_occupations %>%
select(ends_with('.l')) %>%
names()
) -> dbl_marginal_cost
dbl_marginal_cost
view(dbl_marginal_cost)
list_kflex_micro$overall_micro_kflex$kflex_micro
dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
c(83, 80000, c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
) -> dsds
# - User-Defined Ideal Profile --------------------------------------------
fun_ideal_profile <- function(
efa_model
, dbl_user_preferences
, ...
, dbl_scale_ub = 100
, dbl_scale_lb = 0
){
# Dynamic Dots
list2(...) -> list_coef
stopifnot(
"'dbl_scale_ub' must be numeric." =
is.numeric(dbl_scale_ub)
)
stopifnot(
"'dbl_scale_lb' must be numeric." =
is.numeric(dbl_scale_lb)
)
# Arguments Validation
stopifnot(
"'efa_model' must be a factor analysis object." =
any(
str_to_lower(class(
efa_model
)) == 'factanal'
, str_to_lower(class(
efa_model
)) == 'fa'
)
)
t(loadings(efa_model)[,]) %>%
`rownames<-`(
loadings(efa_model)[,] %>%
colnames() %>%
str_extract(
'[[:digit:]]+'
) %>%
paste0('factor',.)
) -> mtx_efa
rm(efa_model)
stopifnot(
"'...' must be a collection of numeric vectors the same length as the number of items in 'efa_model'." =
any(
!length(list_coef)
, all(
is.numeric(c(...))
, map_lgl(
list_coef
, ~ length(.x) ==
ncol(mtx_efa)
))
)
)
stopifnot(
"'dbl_user_preferences' must be a numeric vector the same length as the number of coefficients." =
any(
!length(list_coef)
, all(
is.numeric(dbl_user_preferences)
, length(dbl_user_preferences) ==
sum(
length(list_coef)
, nrow(mtx_efa)
)
))
)
# Data Wrangling
mtx_efa[str_sort(rownames(
mtx_efa), numeric = T
),] -> mtx_efa
dbl_scale_ub[[1]] -> dbl_scale_ub
dbl_scale_lb[[1]] -> dbl_scale_lb
rep(
dbl_scale_ub
, ncol(mtx_efa)
) -> dbl_scale_ub
rep(
dbl_scale_lb
, ncol(mtx_efa)
) -> dbl_scale_lb
rbind(
do.call(rbind, list_coef)
, mtx_efa
) -> mtx_coef
as.numeric(
dbl_user_preferences
) -> dbl_user_preferences
# Estimate User-Defined Ideal Profile
# Economic Problem I
# Economic Problem II
# BVLS Regression Method
coef(bvls(
mtx_coef
, dbl_user_preferences
, bl = dbl_scale_lb
, bu = dbl_scale_ub
)) -> dbl_attributes
colnames(mtx_efa) ->
names(dbl_attributes)
# Output
return(list(
'profile' = dbl_attributes,
'preferences' = mtx_coef,
'scale_ub' = dbl_scale_ub[[1]],
'scale_lb' = dbl_scale_lb[[1]]
))
}
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
c(83, 80000, c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
) -> dsds
view(dsds$profile)
view(dsds$preferences)
dsds$preferences %>%
as_tibble(
rownames = 'criteria'
)
dsds$preferences %>%
as_tibble(
rownames = 'criteria'
) %>%
select(1, contains('flex'))
dsds$
preferences %>%
as_tibble(
rownames = 'criteria'
) %>%
select(
criteria,
contains('flex')
) %>%
view
dsds$
preferences %>%
as_tibble(
rownames = 'criteria'
) %>%
select(
criteria,
contains('flex')
) %>%
view
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
c(80000, 83, c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
, 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
view(dsds$profile)
dsds$
preferences %>%
as_tibble(
rownames = 'criteria'
) %>%
select(
criteria,
contains('flex')
) %>%
view
dsds$
preferences %>%
as_tibble(
rownames = 'criteria'
) %>%
select(
criteria,
contains('flex')
) %>%
view
dsds$
preferences %>%
as_tibble(
rownames = 'criteria'
) %>%
select(
criteria,
contains('flex')
) %>%
view
dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
dsds$
preferences %>%
as_tibble(
rownames = 'criteria'
) %>%
select(
criteria,
contains('flex')
) %>%
view
dsds$
preferences %>%
as_tibble(
rownames = 'criteria'
) %>%
select(
criteria,
contains('flex')
) %>%
view
dsds$
preferences %>%
as_tibble(
rownames = 'criteria'
) %>%
select(
criteria,
contains('flex')
) %>%
mutate(
user_preferences =
c(80000, 83, c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
)
dsds$
preferences %>%
as_tibble(
rownames = 'criteria'
) %>%
select(
criteria,
contains('flex')
) %>%
mutate(
user_preferences =
c(80000, 83, c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
) %>%
view
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
c(80000, 50, c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
, 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
view(dsds$profile)
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
c(80000, 33, c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
, 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
view(dsds$profile)
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
c(80000, 100, c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
, 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
view(dsds$profile)
# , 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
c(80000,
# 50,
c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
c(80000,
# 50,
c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
# , 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
view(dsds$profile)
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
c(80000,
# 50,
c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
# , 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
view(dsds$profile)
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
# c(80000,
c(50000,
# 50,
c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
# , 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
view(dsds$profile)
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
# c(80000,
c(Inf,
# 50,
c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
# , 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
view(dsds$profile)
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
# c(80000,
c(1000000,
# 50,
c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
# , 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
view(dsds$profile)
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
# c(80000,
c(200000,
# 50,
c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
# , 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
view(dsds$profile)
fun_ideal_profile(
efa_model = efa_model
, dbl_user_preferences =
# runif(10, min = 0, max = 100)
# c(83, 0, 0, 0, 83, 67, 100, 100, 0, 50, 0, 100, 0, 17, 0)
# c(80000,
c(100000,
# c(200000,
# 50,
c(83, 0, 0, 0, 67, 50, 100, 83, 0, 33, 0, 100, 0, 17, 0))
, 'kcost' = dbl_marginal_cost[list_kflex_micro$overall_micro_kflex$item]
# , 'micro_kflex' = list_kflex_micro$overall_micro_kflex$kflex_micro
) -> dsds
view(dsds$profile)
