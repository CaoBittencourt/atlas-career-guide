transmute(
dsds = sum(c_across(cols = where(is.numeric)))
)
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations %>%
rowwise() %>%
transmute(
dsds = sum(c_across(cols = where(is.numeric)))
)
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations %>%
select(-occupation) %>%
rowSums()
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations %>%
select(-occupation) %>%
rowSums() %>%
bind_cols(df_occupations)
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations %>%
mutate(across(
where(is.numeric) / rowSums(where(is.numeric))
))
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations %>%
ungroup() %>%
mutate(across(
where(is.numeric) / rowSums(where(is.numeric))
))
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations %>%
ungroup() %>%
mutate(across(where(is.numeric))/rowSums(across(where(is.numeric))))
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations %>%
ungroup() %>%
mutate(
across(where(is.numeric))
/ rowSums(across(where(is.numeric)))
)
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations %>%
mutate(
across(where(is.numeric))
/ rowSums(across(where(is.numeric)))
)
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations %>%
mutate(
across(where(is.numeric))
/ rowSums(across(where(is.numeric)))
) -> df_occupations.pct
df_occupations.pct %>%
select(-occupation) %>%
rowSums()
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(cols = where(is.numeric))
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = attribute
, values_to = pct
)
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'pct'
)
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'pct.total'
)
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'score.pct'
)
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
)
df_occupations %>%
summarise(
across(
.cols = where(is.numeric)
,.fns = fun_capital.flex
))
# -------- CAPITAL FLEXIBLITY ---------------------------------------------
# APPLY FUNCTION -----------------------------------------------------------
df_occupations %>%
summarise(
across(
.cols = where(is.numeric)
,.fns = fun_capital.flex
)) %>%
pivot_longer()
# -------- CAPITAL FLEXIBLITY ---------------------------------------------
# APPLY FUNCTION -----------------------------------------------------------
df_occupations %>%
summarise(
across(
.cols = where(is.numeric)
,.fns = fun_capital.flex
)) %>%
pivot_longer(
cols = everything()
)
# -------- CAPITAL FLEXIBLITY ---------------------------------------------
# APPLY FUNCTION -----------------------------------------------------------
df_occupations %>%
summarise(
across(
.cols = where(is.numeric)
,.fns = fun_capital.flex
)) %>%
pivot_longer(
cols = everything()
, names_to = 'attribute'
, values_to = 'capital.flex'
)
# -------- CAPITAL FLEXIBLITY ---------------------------------------------
# APPLY FUNCTION -----------------------------------------------------------
df_occupations %>%
summarise(
across(
.cols = where(is.numeric)
,.fns = fun_capital.flex
)) %>%
pivot_longer(
cols = everything()
, names_to = 'attribute'
, values_to = 'capital.flex'
) -> df_kflex.long
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
left_join(
df_kflex.long
)
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
)
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
)
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
)
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
) %>%
group_by(
occupation
) %>%
summarise(
capital.flex.pct = sum(capital.flex.pct * level.pct)
)
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
) %>%
group_by(
occupation
) %>%
summarise(
capital.flex.pct = sum(capital.flex * level.pct)
)
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
) %>%
group_by(
occupation
) %>%
mutate(
capital.flex.pct = capital.flex * level.pct
) %>%
summarise(
capital.flex.pct = sum(capital.flex.pct)
)
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
) %>%
group_by(
occupation
) %>%
summarise(
capital.flex.pct = sum(capital.flex * level.pct)
)
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
) %>%
group_by(
occupation
) %>%
summarise(
capital.flex.pct = sum(capital.flex * level.pct)
) %>%
arrange(desc(capital.flex.pct))
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
) %>%
group_by(
occupation
) %>%
summarise(
capital.flex.pct = sum(capital.flex * level.pct)
) %>%
arrange(desc(capital.flex.pct)) %>% view()
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
) %>% view
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations %>%
# mutate(
#   across(where(is.numeric))
#   / rowSums(across(where(is.numeric)))
) -> df_occupations.pct
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations -> df_occupations.pct
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
) %>% view
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
) %>%
group_by(
occupation
) %>%
summarise(
capital.flex.pct = sum(capital.flex * level.pct)
) %>%
arrange(desc(capital.flex.pct)) %>% view()
# ATTRIBUTE PROPORTION ----------------------------------------------------
df_occupations %>%
mutate(
across(where(is.numeric))
/ rowSums(across(where(is.numeric)))
) -> df_occupations.pct
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
) %>%
group_by(
occupation
) %>%
summarise(
capital.flex.pct = sum(capital.flex * level.pct)
) %>%
arrange(desc(capital.flex.pct)) %>% view()
# FLEXIBLE CAPITAL PER OCCUPATION -----------------------------------------
df_occupations.pct %>%
pivot_longer(
cols = where(is.numeric)
, names_to = 'attribute'
, values_to = 'level.pct'
) %>%
full_join(
df_kflex.long
) %>%
group_by(
occupation
) %>%
summarise(
capital.flex.pct = sum(capital.flex * level.pct)
) %>%
arrange(desc(capital.flex.pct)) -> df_occupations.kflex
# -------- RESULTS --------------------------------------------------------
# LINE CHART -------------------------------------------------------------------
df_occupations.kflex %>%
arrange(capital.flex.pct) %>%
mutate(n = row_number()) %>%
fun_plot.line(aes(
x = n
, y = capital.flex.pct
)
, .dbl_limits.y = c(0,1)
, .reorder_fct = T
, .reorder_desc = F
, .reorder_fun = max
, .theme = ggridges::theme_ridges(center_axis_labels = T) +
theme(axis.text.x = element_blank())
, .list_labs = list(
title = str_to_title('the capital flexibility function')
, x = str_to_title('attribute')
, y = str_to_title('capital flexiblity score')
))
# PLOTTING FUNCTIONS ------------------------------------------------------
source('C:/Users/Cao/Documents/Github/Atlas-Research/Plotting Functions/Auto_plots.R')
# -------- RESULTS --------------------------------------------------------
# LINE CHART -------------------------------------------------------------------
df_occupations.kflex %>%
arrange(capital.flex.pct) %>%
mutate(n = row_number()) %>%
fun_plot.line(aes(
x = n
, y = capital.flex.pct
)
, .dbl_limits.y = c(0,1)
, .reorder_fct = T
, .reorder_desc = F
, .reorder_fun = max
, .theme = ggridges::theme_ridges(center_axis_labels = T) +
theme(axis.text.x = element_blank())
, .list_labs = list(
title = str_to_title('the capital flexibility function')
, x = str_to_title('attribute')
, y = str_to_title('capital flexiblity score')
))
df_kflex.long
df_kflex.long %>%
arrange(capital.flex)
df_kflex.long %>%
arrange(desc(capital.flex))
# DENSITY -------------------------------------------------------------------
df_skew_var.long %>%
fun_plot.density(aes(
x = capital.flex
)
, .list_axis.x.args = list(limits = c(0,1))
, .fun_format.y = label_number(accuracy = .01)
, .theme = ggridges::theme_ridges(center_axis_labels = T)
, .list_labs = list(
title = str_to_title('dispersion of the capital flexibility function')
, x = str_to_title('capital flexiblity score')
, y = str_to_title('density')
))
httr::GET('https://services.onetcenter.org/ws/mnm/careers/17-2051.00/')
?GET
# -------- SETUP ----------------------------------------------------------
# PACKAGES ----------------------------------------------------------------
pkg <- c(
'labelled', 'tidyverse' #Data wrangling
, 'httr'
, 'jsonlite'
# , 'blsR' #BLS API
# , 'ONETr' #ONET API
)
# Activate / install packages
lapply(pkg, function(x)
if(!require(x, character.only = T))
{install.packages(x); require(x)})
chr_user
# dsds --------------------------------------------------------------------
httr::GET(
'https://services.onetcenter.org/ws/mnm/careers/17-2051.00/'
, config = config(authenticate(user = 'app_go2atlas', password = '3582qdh'))
)
?GET
# dsds --------------------------------------------------------------------
httr::GET(
'https://services.onetcenter.org/ws/mnm/careers/17-2051.00/'
, config = authenticate(user = 'app_go2atlas', password = '3582qdh')
)
# dsds --------------------------------------------------------------------
httr::GET(
'https://services.onetcenter.org/ws/mnm/careers/17-2051.00/'
, config = authenticate(user = 'app_go2atlas', password = '3582qdh')
) -> dsds
content(dsds)
dsds
dsds$content
dsds$url
content(dsds)
rawToChar(content(dsds))
jsonlite::prettify(rawToChar(content(dsds)))
jsonlite::prettify(rawToChar(content(dsds))) %>%
fromJSON()
jsonlite::prettify(rawToChar(content(dsds))) %>%
fromJSON() -> lalala
lalala$code
lalala$title
lalala$tags
lalala$also_called
lalala$what_they_do
lalala$on_the_job$task
lalala$resources$resource
lalala$resources$resource$href
# dsds --------------------------------------------------------------------
httr::GET(
'https://services.onetcenter.org/ws/mnm/careers/17-2051.00/job_outlook'
, config = authenticate(user = 'app_go2atlas', password = '3582qdh')
) -> dsds
dsds$url
jsonlite::prettify(rawToChar(content(dsds))) %>%
fromJSON() -> lalala
lalala$code
lalala$title
lalala$outlook
lalala$salary
# dsds --------------------------------------------------------------------
httr::GET(
'https://services.onetcenter.org/ws/mnm/careers/17-2051.00/'
, config = authenticate(user = 'app_go2atlas', password = '3582qdh')
) -> dsds
jsonlite::prettify(rawToChar(content(dsds))) %>%
fromJSON() -> lalala
lalala
# dsds --------------------------------------------------------------------
httr::GET(
'https://services.onetcenter.org/ws/mnm/careers/17-2051.00/explore_more'
, config = authenticate(user = 'app_go2atlas', password = '3582qdh')
) -> dsds
jsonlite::prettify(rawToChar(content(dsds))) %>%
fromJSON() -> lalala
lalala
names(lalala)
lalala$careers$career
lalala$industries$industry
lalala$industries$industry$href
lalala$industries$industry$percent_employed
lalala$industries$industry$code
